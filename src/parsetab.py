
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND ANDTHEN ARRAY ASSIGN BEGIN BOOLEAN BYTE CASE CHAR COLON COMMA COMP CONST CURRENCY DIV DIVIDE DO DOT DOUBLE DOWNTO ELSE END EQ EQUALS EXCLAMATION EXTENDED FILE FOR FUNCTION GE GOTO GT ID IF IN INTEGER LABEL LBRACKET LE LONGINT LPAREN LT MINUS MOD NE NIL NOT NUMBER OF OR ORELSE PACKED PIPE PLUS PROCEDURE PROGRAM RBRACKET READ READLN REAL RECORD REPEAT RPAREN SEMICOLON SET SHORTINT SINGLE STRING THEN TILDE TIMES TO TYPE UNTIL VAR WHILE WITH WORD WRITE WRITELNprogram : header block DOTheader : PROGRAM ID LPAREN id_list RPAREN SEMICOLON\n| PROGRAM ID SEMICOLONid_list : id_list COMMA ID\n| IDdeclarations : declarations variable_declaration\n| declarations function_declaration\n| declarations procedure_declaration\n| emptyempty :block : declarations compound_statementvariable_declaration : VAR variable_list SEMICOLONfunction_declaration : FUNCTION ID parameter_list COLON type SEMICOLON blockprocedure_declaration : PROCEDURE ID parameter_list SEMICOLON blockvariable_list : variable_list SEMICOLON variable\n| variablevariable : id_list COLON typetype : ID\n| INTEGER\n| REAL\n| BOOLEAN\n| CHAR\n| BYTE\n| WORD\n| LONGINT\n| SHORTINT\n| SINGLE\n| DOUBLE\n| EXTENDED\n| COMP\n| CURRENCY\n| STRING\n| ARRAY LBRACKET NUMBER DOT DOT NUMBER RBRACKET OF type\n| RECORD field_list ENDfield_list : field_list SEMICOLON field\n| fieldfield : id_list COLON typeparameter_list : LPAREN parameter_section_list RPAREN\n| emptyparameter_section_list : parameter_section_list SEMICOLON parameter_section\n| parameter_sectionparameter_section : id_list COLON type\n| VAR id_list COLON typecompound_statement : BEGIN statement_list ENDstatement_list : statement_list SEMICOLON statement\n| statementstatement : assignment_statement\n| expression\n| compound_statement\n| io_statement\n| emptyio_statement : WRITE LPAREN expression_list RPAREN\n| WRITELN LPAREN expression_list RPARENassignment_statement : ID ASSIGN expressionexpression_list : expression_list COMMA expression\n| expression\n| emptyexpression : NUMBER\n| STRINGexpression : IDexpression : LPAREN expression RPARENexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expressionexpression : ID LPAREN expression_list RPAREN'
    
_lr_action_items = {'PROGRAM':([0,],[3,]),'$end':([1,8,],[0,-1,]),'BEGIN':([2,5,6,9,10,11,12,13,18,39,40,51,96,97,111,117,124,],[-10,13,-9,-11,-6,-7,-8,13,-3,-44,13,-12,-10,-2,-14,-10,-13,]),'VAR':([2,5,6,9,10,11,12,18,39,51,55,96,97,108,111,117,124,],[-10,14,-9,-11,-6,-7,-8,-3,-44,-12,95,-10,-2,95,-14,-10,-13,]),'FUNCTION':([2,5,6,9,10,11,12,18,39,51,96,97,111,117,124,],[-10,15,-9,-11,-6,-7,-8,-3,-44,-12,-10,-2,-14,-10,-13,]),'PROCEDURE':([2,5,6,9,10,11,12,18,39,51,96,97,111,117,124,],[-10,16,-9,-11,-6,-7,-8,-3,-44,-12,-10,-2,-14,-10,-13,]),'ID':([3,13,14,15,16,17,29,40,41,42,43,44,45,46,49,50,51,52,53,55,89,91,95,99,108,109,115,116,120,129,],[7,26,35,36,37,35,48,26,48,48,48,48,48,48,48,48,35,73,90,35,35,73,35,48,35,73,35,73,73,73,]),'DOT':([4,9,39,113,121,],[8,-11,-44,121,126,]),'LPAREN':([7,13,26,29,30,31,36,37,40,41,42,43,44,45,46,48,49,50,99,],[17,29,46,29,49,50,55,55,29,29,29,29,29,29,29,46,29,29,29,]),'SEMICOLON':([7,13,19,20,21,22,23,24,25,26,27,28,32,33,37,39,40,48,56,57,58,59,60,61,62,63,64,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,92,93,98,100,101,103,104,106,107,114,118,119,122,123,125,130,],[18,-10,40,-46,-47,-48,-49,-50,-51,-60,-58,-59,51,-16,-10,-44,-10,-60,-39,96,97,-45,-62,-63,-64,-65,-54,-61,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,108,-41,-66,-52,-53,115,-36,117,-38,-34,-40,-42,-35,-37,-43,-33,]),'NUMBER':([13,29,40,41,42,43,44,45,46,49,50,99,102,126,],[27,27,27,27,27,27,27,27,27,27,27,27,113,127,]),'STRING':([13,29,40,41,42,43,44,45,46,49,50,52,91,99,109,116,120,129,],[28,28,28,28,28,28,28,28,28,28,28,87,87,28,87,87,87,87,]),'WRITE':([13,40,],[30,30,]),'WRITELN':([13,40,],[31,31,]),'END':([13,19,20,21,22,23,24,25,26,27,28,39,40,48,59,60,61,62,63,64,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,98,100,101,103,104,114,122,123,130,],[-10,39,-46,-47,-48,-49,-50,-51,-60,-58,-59,-44,-10,-60,-45,-62,-63,-64,-65,-54,-61,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-66,-52,-53,114,-36,-34,-35,-37,-33,]),'PLUS':([22,26,27,28,47,48,60,61,62,63,64,66,68,98,112,],[41,-60,-58,-59,41,-60,41,41,41,41,41,41,-61,-66,41,]),'MINUS':([22,26,27,28,47,48,60,61,62,63,64,66,68,98,112,],[42,-60,-58,-59,42,-60,42,42,42,42,42,42,-61,-66,42,]),'TIMES':([22,26,27,28,47,48,60,61,62,63,64,66,68,98,112,],[43,-60,-58,-59,43,-60,43,43,43,43,43,43,-61,-66,43,]),'DIVIDE':([22,26,27,28,47,48,60,61,62,63,64,66,68,98,112,],[44,-60,-58,-59,44,-60,44,44,44,44,44,44,-61,-66,44,]),'ASSIGN':([26,],[45,]),'RPAREN':([27,28,35,38,46,47,48,49,50,60,61,62,63,65,66,67,68,69,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,92,93,98,112,114,118,119,125,130,],[-58,-59,-5,58,-10,68,-60,-10,-10,-62,-63,-64,-65,98,-56,-57,-61,100,101,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-4,107,-41,-66,-55,-34,-40,-42,-43,-33,]),'COMMA':([27,28,34,35,38,46,48,49,50,60,61,62,63,65,66,67,68,69,70,90,94,98,105,110,112,],[-58,-59,53,-5,53,-10,-60,-10,-10,-62,-63,-64,-65,99,-56,-57,-61,99,99,-4,53,-66,53,53,-55,]),'COLON':([34,35,36,54,56,90,94,105,107,110,],[52,-5,-10,91,-39,-4,109,116,-38,120,]),'INTEGER':([52,91,109,116,120,129,],[74,74,74,74,74,74,]),'REAL':([52,91,109,116,120,129,],[75,75,75,75,75,75,]),'BOOLEAN':([52,91,109,116,120,129,],[76,76,76,76,76,76,]),'CHAR':([52,91,109,116,120,129,],[77,77,77,77,77,77,]),'BYTE':([52,91,109,116,120,129,],[78,78,78,78,78,78,]),'WORD':([52,91,109,116,120,129,],[79,79,79,79,79,79,]),'LONGINT':([52,91,109,116,120,129,],[80,80,80,80,80,80,]),'SHORTINT':([52,91,109,116,120,129,],[81,81,81,81,81,81,]),'SINGLE':([52,91,109,116,120,129,],[82,82,82,82,82,82,]),'DOUBLE':([52,91,109,116,120,129,],[83,83,83,83,83,83,]),'EXTENDED':([52,91,109,116,120,129,],[84,84,84,84,84,84,]),'COMP':([52,91,109,116,120,129,],[85,85,85,85,85,85,]),'CURRENCY':([52,91,109,116,120,129,],[86,86,86,86,86,86,]),'ARRAY':([52,91,109,116,120,129,],[88,88,88,88,88,88,]),'RECORD':([52,91,109,116,120,129,],[89,89,89,89,89,89,]),'LBRACKET':([88,],[102,]),'RBRACKET':([127,],[128,]),'OF':([128,],[129,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'header':([0,],[2,]),'block':([2,96,117,],[4,111,124,]),'declarations':([2,96,117,],[5,5,5,]),'empty':([2,13,36,37,40,46,49,50,96,117,],[6,25,56,56,25,67,67,67,6,6,]),'compound_statement':([5,13,40,],[9,23,23,]),'variable_declaration':([5,],[10,]),'function_declaration':([5,],[11,]),'procedure_declaration':([5,],[12,]),'statement_list':([13,],[19,]),'statement':([13,40,],[20,59,]),'assignment_statement':([13,40,],[21,21,]),'expression':([13,29,40,41,42,43,44,45,46,49,50,99,],[22,47,22,60,61,62,63,64,66,66,66,112,]),'io_statement':([13,40,],[24,24,]),'variable_list':([14,],[32,]),'variable':([14,51,],[33,71,]),'id_list':([14,17,51,55,89,95,108,115,],[34,38,34,94,105,110,94,105,]),'parameter_list':([36,37,],[54,57,]),'expression_list':([46,49,50,],[65,69,70,]),'type':([52,91,109,116,120,129,],[72,106,119,123,125,130,]),'parameter_section_list':([55,],[92,]),'parameter_section':([55,108,],[93,118,]),'field_list':([89,],[103,]),'field':([89,115,],[104,122,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> header block DOT','program',3,'p_program','anasin.py',10),
  ('header -> PROGRAM ID LPAREN id_list RPAREN SEMICOLON','header',6,'p_header','anasin.py',15),
  ('header -> PROGRAM ID SEMICOLON','header',3,'p_header','anasin.py',16),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','anasin.py',24),
  ('id_list -> ID','id_list',1,'p_id_list','anasin.py',25),
  ('declarations -> declarations variable_declaration','declarations',2,'p_declarations','anasin.py',33),
  ('declarations -> declarations function_declaration','declarations',2,'p_declarations','anasin.py',34),
  ('declarations -> declarations procedure_declaration','declarations',2,'p_declarations','anasin.py',35),
  ('declarations -> empty','declarations',1,'p_declarations','anasin.py',36),
  ('empty -> <empty>','empty',0,'p_empty','anasin.py',44),
  ('block -> declarations compound_statement','block',2,'p_block','anasin.py',49),
  ('variable_declaration -> VAR variable_list SEMICOLON','variable_declaration',3,'p_variable_declaration','anasin.py',54),
  ('function_declaration -> FUNCTION ID parameter_list COLON type SEMICOLON block','function_declaration',7,'p_function_declaration','anasin.py',61),
  ('procedure_declaration -> PROCEDURE ID parameter_list SEMICOLON block','procedure_declaration',5,'p_procedure_declaration','anasin.py',68),
  ('variable_list -> variable_list SEMICOLON variable','variable_list',3,'p_variable_list','anasin.py',75),
  ('variable_list -> variable','variable_list',1,'p_variable_list','anasin.py',76),
  ('variable -> id_list COLON type','variable',3,'p_variable','anasin.py',84),
  ('type -> ID','type',1,'p_type','anasin.py',90),
  ('type -> INTEGER','type',1,'p_type','anasin.py',91),
  ('type -> REAL','type',1,'p_type','anasin.py',92),
  ('type -> BOOLEAN','type',1,'p_type','anasin.py',93),
  ('type -> CHAR','type',1,'p_type','anasin.py',94),
  ('type -> BYTE','type',1,'p_type','anasin.py',95),
  ('type -> WORD','type',1,'p_type','anasin.py',96),
  ('type -> LONGINT','type',1,'p_type','anasin.py',97),
  ('type -> SHORTINT','type',1,'p_type','anasin.py',98),
  ('type -> SINGLE','type',1,'p_type','anasin.py',99),
  ('type -> DOUBLE','type',1,'p_type','anasin.py',100),
  ('type -> EXTENDED','type',1,'p_type','anasin.py',101),
  ('type -> COMP','type',1,'p_type','anasin.py',102),
  ('type -> CURRENCY','type',1,'p_type','anasin.py',103),
  ('type -> STRING','type',1,'p_type','anasin.py',104),
  ('type -> ARRAY LBRACKET NUMBER DOT DOT NUMBER RBRACKET OF type','type',9,'p_type','anasin.py',105),
  ('type -> RECORD field_list END','type',3,'p_type','anasin.py',106),
  ('field_list -> field_list SEMICOLON field','field_list',3,'p_field_list','anasin.py',120),
  ('field_list -> field','field_list',1,'p_field_list','anasin.py',121),
  ('field -> id_list COLON type','field',3,'p_field','anasin.py',129),
  ('parameter_list -> LPAREN parameter_section_list RPAREN','parameter_list',3,'p_parameter_list','anasin.py',134),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','anasin.py',135),
  ('parameter_section_list -> parameter_section_list SEMICOLON parameter_section','parameter_section_list',3,'p_parameter_section_list','anasin.py',143),
  ('parameter_section_list -> parameter_section','parameter_section_list',1,'p_parameter_section_list','anasin.py',144),
  ('parameter_section -> id_list COLON type','parameter_section',3,'p_parameter_section','anasin.py',152),
  ('parameter_section -> VAR id_list COLON type','parameter_section',4,'p_parameter_section','anasin.py',153),
  ('compound_statement -> BEGIN statement_list END','compound_statement',3,'p_compound_statement','anasin.py',161),
  ('statement_list -> statement_list SEMICOLON statement','statement_list',3,'p_statement_list','anasin.py',166),
  ('statement_list -> statement','statement_list',1,'p_statement_list','anasin.py',167),
  ('statement -> assignment_statement','statement',1,'p_statement','anasin.py',175),
  ('statement -> expression','statement',1,'p_statement','anasin.py',176),
  ('statement -> compound_statement','statement',1,'p_statement','anasin.py',177),
  ('statement -> io_statement','statement',1,'p_statement','anasin.py',178),
  ('statement -> empty','statement',1,'p_statement','anasin.py',179),
  ('io_statement -> WRITE LPAREN expression_list RPAREN','io_statement',4,'p_io_statement','anasin.py',184),
  ('io_statement -> WRITELN LPAREN expression_list RPAREN','io_statement',4,'p_io_statement','anasin.py',185),
  ('assignment_statement -> ID ASSIGN expression','assignment_statement',3,'p_assignment_statement','anasin.py',190),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','anasin.py',195),
  ('expression_list -> expression','expression_list',1,'p_expression_list','anasin.py',196),
  ('expression_list -> empty','expression_list',1,'p_expression_list','anasin.py',197),
  ('expression -> NUMBER','expression',1,'p_expression_literal','anasin.py',207),
  ('expression -> STRING','expression',1,'p_expression_literal','anasin.py',208),
  ('expression -> ID','expression',1,'p_expression_variable','anasin.py',212),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','anasin.py',216),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','anasin.py',220),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','anasin.py',221),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','anasin.py',222),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','anasin.py',223),
  ('expression -> ID LPAREN expression_list RPAREN','expression',4,'p_expression_function_call','anasin.py',227),
]
